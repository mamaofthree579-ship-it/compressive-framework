{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Compressive Framework \u2014 Dynamic Particle Formation (CF-DPF)","text":""},{"location":"#compressive-framework-cf-dpf","title":"Compressive Framework (CF-DPF)","text":""},{"location":"#dynamic-particle-formation-from-wave-compression-and-quantum-coalescence","title":"Dynamic Particle Formation from Wave Compression and Quantum Coalescence","text":""},{"location":"#overview","title":"\ud83c\udf0c Overview","text":"<p>The Compressive Framework (CF-DPF) proposes a unified model of wave dynamics, chronon behavior, and quantum structure formation \u2014 demonstrating how compression and interference at the subquantum level lead to particle creation and spacetime curvature.</p> <p>This project integrates: - Wave Compression &amp; Energy Densification - Temporal Quantization (Chronon Field Dynamics) - Fractional Presence &amp; Nonlocal Binding - Particle Coalescence &amp; Domain Formation</p> <p>All components are visualized and validated through interactive Jupyter/MkDocs notebooks, making the framework both rigorous and accessible.</p>"},{"location":"#notebook-collection","title":"\ud83d\udcd8 Notebook Collection","text":"<p>Explore each phase of the compressive model:</p> <ol> <li>Wave Compression</li> <li>Chronon Dynamics</li> <li>Particle Formation</li> <li>Wave \u2192 Particle Motion</li> <li>Fractional Presence &amp; Nonlocal Binding</li> <li>Multi-Particle Coalescence</li> <li>Field Interactions</li> <li>Quantized Curvature</li> <li>Vacuum Symmetry Breaking</li> <li>Vacuum Domain Formation</li> </ol>"},{"location":"#scientific-vision","title":"\ud83d\udd2c Scientific Vision","text":"<p>From compression to creation \u2014 a continuous field model of matter.</p> <p>CF-DPF redefines how quantum matter emerges from distributed wave behavior, exploring: - The conversion of wave amplitude to localized curvature - The propagation of temporal quanta (chronons, cognons, gravitons) - The self-stabilization of energy through coalescent feedback - The transition between nonlocal wave states and localized particles</p>"},{"location":"#structure-of-the-framework","title":"\ud83e\udde9 Structure of the Framework","text":"<pre><code>A[Distributed Field \u03c8(t,x)] --&gt;B[Compression Nodes]\nB --&gt; C[Resonant Interference]\nC --&gt; D[Localized Energy Wells]\nD --&gt; E[Particle Nucleation]\nE --&gt; F[Wave-Particle Oscillation]\nF --&gt; G[Multi-Particle Coalescence]\nG --&gt; H[Curvature and Domain           Formation]\n</code></pre> <p>\u2e3b</p> <p>\ud83e\udd1d Contributing</p> <p>Contributions and theoretical discussions are encouraged! Please review the Contributing Guide\ufffc and open issues or pull requests to extend or refine the framework.</p>  \u00a9 2025 Compressive Framework \u2014 Dynamic Particle Formation (CF-DPF) Built with \u2764\ufe0f using MkDocs Material\ufffc"},{"location":"api/","title":"CF\u2013DPF API Reference","text":"<p>This document outlines the Compressive Framework \u2014 Dynamic Particle Formation (CF\u2013DPF) API. It summarizes the logical module structure, key classes, and utility functions referenced throughout the notebooks.</p>"},{"location":"api/#core-architecture","title":"\ud83e\udde9 Core Architecture","text":"Module Description <code>cf.wave</code> Handles compression, propagation, and resonance of field waves. <code>cf.chronon</code> Models time-quantized units (chronons) and temporal phase flow. <code>cf.particle</code> Generates stable particle configurations from residual field compression. <code>cf.motion</code> Governs transitions from distributed wave behavior to localized motion. <code>cf.binding</code> Manages fractional presence, nonlocal binding, and field entanglement. <code>cf.coalescence</code> Simulates multi-particle merging and stability thresholds. <code>cf.field</code> Defines field-level interactions between cognons (data), gravitons (gravity), and chronons (time). <code>cf.curvature</code> Handles quantized curvature feedback and geometry distortion. <code>cf.vacuum</code> Simulates vacuum symmetry breaking and domain formation. <code>cf.utils</code> Shared math, constants, and visualization utilities."},{"location":"api/#example-workflow","title":"\u2699\ufe0f Example Workflow","text":"<p>```python from cf.wave import WaveCompressor from cf.chronon import ChrononField from cf.particle import ParticleFormation from cf.motion import WaveToParticle from cf.field import FieldInteraction</p>"},{"location":"api/#initialize-a-wave","title":"Initialize a wave","text":"<p>wave = WaveCompressor(frequency=3.2, amplitude=1.0)</p>"},{"location":"api/#model-temporal-compression","title":"Model temporal compression","text":"<p>chronon_field = ChrononField(time_quantum=1e-21) chronon_field.propagate(wave)</p>"},{"location":"api/#generate-stable-particles-from-the-wavefront","title":"Generate stable particles from the wavefront","text":"<p>particle = ParticleFormation(wave) particle.nucleate(resolution=500)</p>"},{"location":"api/#transition-wave-state-to-localized-motion","title":"Transition wave state to localized motion","text":"<p>transition = WaveToParticle(wave, particle) transition.visualize()</p>"},{"location":"api/#introduce-gravitational-informational-coupling","title":"Introduce gravitational / informational coupling","text":"<p>field = FieldInteraction() field.bind(wave, particle)</p> <p>\u2e3b</p> <p>\ud83e\uddee Utilities and Constants</p> <p>The cf.utils module provides key physical constants and math helpers.</p> <p>from cf.utils import hbar, c, planck_length, resonance_energy</p> <p>E = resonance_energy(frequency=4.0) print(f\"Energy: {E:.3e} J\")</p> <p>Available constants:     \u2022   hbar \u2014 Reduced Planck constant     \u2022   c \u2014 Speed of light     \u2022   planck_length \u2014 Quantum scale base length     \u2022   tau \u2014 Time period of one quantum cycle</p> <p>Available utilities:     \u2022   normalize_wave(data) \u2014 rescales amplitude data     \u2022   energy_density(wave) \u2014 returns the energy distribution     \u2022   phase_shift(field, delta_t) \u2014 applies temporal offsets</p> <p>\u2e3b</p> <p>\ud83e\udde0 Field Entities</p>"},{"location":"api/#entity-symbol-description","title":"Entity | Symbol | Description","text":"<p>Chronon -&gt; \u03c7 -&gt; Represents a discrete quantum of time</p> <p>Graviton -&gt; \u03d5 -&gt; Mediates curvature and mass interaction</p> <p>Cognon -&gt; \u03c8 -&gt; Encodes informational density and pattern memory</p> <p>These are represented programmatically through the cf.field module and can interact or superimpose via coupling rules.</p> <p>\u2e3b</p> <p>\ud83c\udf00 Visualization API</p> <p>The cf.visuals toolkit provides utilities for rendering and analysis.</p> <p>from cf.visuals import plot_field, animate_transition</p> <p>plot_field(field) animate_transition(wave, particle)</p> <p>Functions:     \u2022   plot_field(field) \u2192 2D field magnitude map     \u2022   animate_transition(wave, particle) \u2192 smooth transformation animation     \u2022   render_vacuum_domain(domain) \u2192 visualize domain formation &amp; collapse</p> <p>\u2e3b</p> <p>\ud83d\ude80 Simulation Pipeline Summary</p> <p>Step Notebook Description 1 01_wave_compression Wave compression dynamics 2 02_chronon_dynamics Quantized time structures 3 03_particle_formation Stable particle nucleation 4 04_wave_to_particle_motion Motion emergence 5 05_fractional_presence Nonlocal field binding 6 06_particle_coalescence Multi-particle merging 7 07_field_interactions Cross-field coherence 8 08_quantized_curvature Geometric feedback 9 09_vacuum_symmetry_breaking Symmetry and phase imbalance 10 10_vacuum_domain_formation Stable domain formation</p> <p>\u2e3b</p> <p>\ud83e\udde9 Future API Goals     \u2022   Add CFUniverse() unified simulation orchestrator     \u2022   Support GPU acceleration for wave propagation     \u2022   Integrate real-time visualization dashboards     \u2022   Create JSON-based experiment templates for reproducibility</p> <p>\u2e3b</p> <p>Auto-generated documentation based on conceptual and mathematical models within the CF\u2013DPF framework. Use mkdocs build or mkdocs serve to regenerate.</p>"},{"location":"contributing/","title":"Contributing to the Compressive Framework (CF\u2013DPF)","text":"<p>Thank you for your interest in contributing to CF\u2013DPF (Compressive Framework \u2014 Dynamic Particle Formation)! This project explores theoretical physics and simulation concepts through interactive notebooks and visual models.</p>"},{"location":"contributing/#contribution-guidelines","title":"\ud83e\udded Contribution Guidelines","text":""},{"location":"contributing/#1-setting-up-your-environment","title":"1. Setting up your environment","text":"<p>Before contributing, ensure you have the dependencies installed:</p> <pre><code>pip install -r requirements.txt\n\nThen serve the documentation locally:\n\nmkdocs serve\n\n2. Branching &amp; Workflow\n    \u2022   main \u2192 stable release branch (only reviewed merges)\n    \u2022   dev \u2192 active development branch (PRs go here)\n    \u2022   feature/ \u2192 for new modules or notebooks\n    \u2022   fix/ \u2192 for bug patches or small corrections\n\nExample: git checkout -b feature/notebook11_new_effect\n\ngit checkout -b feature/notebook11_new_effect\n\n```python\n# code\n</code></pre> <ol> <li>Submitting Pull Requests<ol> <li>Fork the repository</li> <li>Create your feature branch</li> <li>Commit changes with clear messages</li> <li>Submit a pull request to the dev branch</li> </ol> </li> </ol> <p>\u2e3b</p> <p>\ud83e\udde0 Helpful Commands</p> <p>Build site manually: mkdocs build</p> <p>Validate notebooks: python .github/scripts/execute_notebooks.py</p> <p>\u2e3b</p> <p>\ud83d\udca1 Need Help?</p> <p>If you have questions, open an issue with a descriptive title. For conceptual discussion or physics questions, use Discussions.</p> <p>\u2e3b</p> <p>\u2014 The CF\u2013DPF Development Team</p>"},{"location":"contributing/#apimd","title":"\u2699\ufe0f <code>api.md</code>","text":"<p>(Documenting available modules and potential interfaces)</p> <pre><code># CF\u2013DPF API Reference\n\nThis document outlines the **programmatic interface** and structure of the Compressive Framework.  \nIt is intended for developers integrating CF\u2013DPF modules into research tools or simulations.\n\n---\n\n## \ud83e\udde9 Core Modules\n\n| Module | Description |\n|:-------|:-------------|\n| `cf.wave` | Handles wave compression, resonance, and harmonic transformations. |\n| `cf.chronon` | Models chronon (quantum time) dynamics. |\n| `cf.particle` | Manages particle formation, coalescence, and interactions. |\n| `cf.fields` | Describes interaction fields (graviton, cognon, etc.) and nonlocal binding. |\n| `cf.vacuum` | Models vacuum symmetry breaking and domain formation. |\n| `cf.visuals` | Utility for plots, animations, and visual diagnostics. |\n\n---\n\n## \ud83e\udde0 Example Usage\n\n```python\nfrom cf.wave import WaveCompressor\nfrom cf.particle import ParticleSimulator\n\nwave = WaveCompressor(frequency=4.2, amplitude=1.0)\nparticles = ParticleSimulator(wave)\nparticles.simulate(steps=1000)\nparticles.plot()\n</code></pre> <p>\u2e3b</p> <p>\ud83e\uddee Math and Physics Utilities</p> <p>These are helper functions used across multiple notebooks: from cf.utils import hbar, c, planck_length</p> <p>E = hbar * 2 * np.pi * frequency print(f\"Energy: {E:.3e} J\")</p> <p>\u2e3b</p> <p>\ud83d\ude80 Future API Goals     \u2022   Introduce unified simulation class: CFUniverse()     \u2022   Add parallelized backends for larger-scale particle simulations     \u2022   Build API wrappers for visualization dashboards</p> <p>\u2e3b</p> <p>Auto-generated from core documentation and notebooks. Use mkdocs build to regenerate.</p>"},{"location":"notebooks/01_wave_compression/","title":"\ud83c\udf00 Wave Compression \u2014 Foundations of the Compressive Framework","text":"<p>Notebook 1 of 10 Establishing the fundamental wave compression dynamics that give rise to all emergent particle behavior in the Compressive Framework (CF).</p>"},{"location":"notebooks/01_wave_compression/#1-concept-overview","title":"1. Concept Overview","text":"<p>The Compressive Framework (CF) begins with the wavefunction \u03c8(t, x), which represents distributed presence \u2014 energy, probability, and informational amplitude.</p> <p>Compression occurs when \u03c8(t, x) interacts with spatial curvature and internal feedback fields, gradually reducing its spread while amplifying local density.</p> <p>This dynamic sets the foundation for particle formation and the coupling of graviton, chronon, and cognon modes.</p>"},{"location":"notebooks/01_wave_compression/#2-foundational-equation","title":"2. Foundational Equation","text":"<p>The compressive wave equation can be written as a modified Schr\u00f6dinger form:</p>  i \\hbar \\frac{\\partial \\psi}{\\partial t} = -\\frac{\\hbar^2}{2m} \\nabla^2 \\psi + \\alpha |\\psi|^2 \\psi - \\beta \\nabla^2(|\\psi|^2)\\psi  <p>where:</p> Symbol Meaning  \\alpha  Nonlinear self-attraction (compression gain)  \\beta  Diffusion-like resistance term  \\psi(t,x)  Distributed wave amplitude  m  Effective inertial parameter  \\hbar  Reduced Planck constant (scaling factor) <p>This model balances nonlinear focusing with spatial diffusion, naturally producing compression thresholds that seed particle-like stability.</p>"},{"location":"notebooks/01_wave_compression/#3-visualization-1d-wave-compression","title":"3. Visualization \u2014 1D Wave Compression","text":"<p>\u2e3b</p> <ol> <li>Interpretation</li> </ol> <p>As \u03c8 compresses, three key subfields begin to emerge:     \u2022   \u03a6(t,x) \u2192 Graviton field (spatial curvature)     \u2022   \u03c7(t,x) \u2192 Chronon field (temporal coherence)     \u2022   C(t,x) \u2192 Cognon field (informational density)</p> <p>In subsequent notebooks, we\u2019ll separately derive and visualize each of these, showing how they interact to create stable particle emergence and nonlocal coupling.</p> <p>\u2e3b</p> <ol> <li>Next Notebook</li> </ol> <p>Next: Chronon Dynamics \u2192\ufffc</p> <p>We\u2019ll explore temporal coherence, where \u03c8\u2019s internal phase synchronization gives rise to the chronon field \u03c7(t,x) \u2014 the heartbeat of compressed temporal structure.</p>"},{"location":"notebooks/02_chronon_dynamics/","title":"\u23f3 Chronon Dynamics \u2014 Temporal Coherence and Wave Synchronization","text":"<p>Notebook 2 of 10 Building upon the compressive wave foundation, we now define the chronon \u2014 the intrinsic temporal oscillator that stabilizes phase coherence in a compressed wave domain.</p>"},{"location":"notebooks/02_chronon_dynamics/#1-concept-overview","title":"1. Concept Overview","text":"<p>Once the wave \u03c8(t, x) compresses spatially, its internal phase oscillations begin to synchronize. This synchronization defines a temporal field \u03c7(t, x) \u2014 the Chronon \u2014 representing the local rhythm or pulse of compression.</p> <p>In essence: Graviton \u2192 Curves Space Chronon \u2192 Curves Time Cognon \u2192 Curves Information</p> <p>The chronon\u2019s presence ensures that compressed wave packets maintain stable periodicity and predictable motion through phase alignment.</p>"},{"location":"notebooks/02_chronon_dynamics/#2-chronon-field-definition","title":"2. Chronon Field Definition","text":"<p>We define \u03c7(t, x) as the local temporal coherence function:</p>  \\chi(t, x) = \\frac{\\partial \\phi(t, x)}{\\partial t}  <p>where  \\phi(t, x)  is the instantaneous phase of \u03c8(t, x):</p>  \\psi(t, x) = A(t, x) e^{i \\phi(t, x)}  <p>Thus, \u03c7(t, x) describes how quickly \u03c8\u2019s internal phase evolves \u2014 effectively, its time curvature.</p>"},{"location":"notebooks/02_chronon_dynamics/#3-dynamic-equation-for-temporal-coherence","title":"3. Dynamic Equation for Temporal Coherence","text":"\\frac{\\partial \\chi}{\\partial t} =  - \\gamma \\chi + \\lambda \\nabla^2 \\phi + \\eta |\\psi|^2  <p>where:</p> Symbol Meaning  \\gamma  Temporal damping constant  \\lambda  Diffusive coupling (spatial coherence feedback)  \\eta  Compressive feedback from \u03c8 amplitude  \\phi  Wave phase (from \u03c8) ( \\psi <p>This coupling means that areas of high compression (large |\u03c8|\u00b2) slow local time flow \u2014 an analog to gravitational time dilation.</p>"},{"location":"notebooks/02_chronon_dynamics/#4-visualization-chronon-oscillation-map","title":"4. Visualization \u2014 Chronon Oscillation Map","text":"<p>This plot shows the fluctuation pattern of \u03c7(t, x) \u2014 the wave\u2019s rhythmic \u201cheartbeat\u201d across time and space.</p> <p>\u2e3b</p> <ol> <li>Interpretation     \u2022   High |\u03c8|\u00b2 \u2192 Chronon slowdown (time curves inward)     \u2022   Low |\u03c8|\u00b2 \u2192 Chronon acceleration (time expands outward)     \u2022   Stable oscillation bands form, creating temporal zones of coherence.</li> </ol> <p>These zones define how particles will later move, oscillate, or couple \u2014 setting the foundation for wave-to-particle transitions.</p> <p>\u2e3b</p> <ol> <li>Next Notebook</li> </ol> <p>Next: Particle Formation \u2192\ufffc</p> <p>We\u2019ll show how localized compressive and temporal coherence zones coalesce into stable quantized structures \u2014 the first emergent particles of the Compressive Framework.</p>"},{"location":"notebooks/03_particle_formation/","title":"Notebook 03 \u2014 Particle Formation","text":""},{"location":"notebooks/03_particle_formation/#overview","title":"Overview","text":"<p>This notebook explores the emergence of stable particles from localized compression and phase-locking of the distributed wavefields: - The graviton (gravity/compression field) - The chronon (time-bonding field) - The cognon (data/occupancy field)</p> <p>Particle formation is treated as a thresholded condensation process, triggered when local wave density and compression exceed a critical limit.</p>"},{"location":"notebooks/03_particle_formation/#1-localized-collapse-and-birth-condition","title":"1. Localized Collapse and Birth Condition","text":"<p>We start from the core particle creation criterion:</p>  \\rho(x,t) &gt; \\rho_{\\rm th}, \\quad \\lambda_c &gt; \\lambda_{\\rm th} \\Rightarrow \\text{nucleate particle at } x  <p>In continuous form, the birth rate is expressed as:</p>  \\Gamma(x,t) = \\alpha \\, H\\big(\\rho(x,t) - \\rho_{\\rm th}\\big) \\, \\big(\\rho(x,t) - \\rho_{\\rm th}\\big)^n  <p>where  H(\\cdot)  is the Heaviside (or smoothed logistic) step function.</p>"},{"location":"notebooks/03_particle_formation/#2-physical-interpretation","title":"2. Physical Interpretation","text":"Symbol Meaning Role  \\rho  Local wave density Determines collapse threshold  \\lambda_c  Compressive strength Controls graviton coupling  \\alpha  Creation rate constant Governs nucleation rate  n  Nonlinearity exponent Tuning for sharpness of transition  \\Phi  Compression potential Draws density inward <p>When compression and density reinforce, wave amplitude focuses, eventually forming a stable \u201cparticle kernel.\u201d</p>"},{"location":"notebooks/03_particle_formation/#3-model-code-prototype","title":"3. Model Code (Prototype)","text":"<p>\u2e3b</p> <ol> <li>Evolution Picture</li> </ol> <p>Stages of Formation:     1.  Wave propagation \u2014 freely evolving distributed \u03c8-field.     2.  Local focusing \u2014 compression builds around density maxima.     3.  Threshold crossing \u2014 nonlinear feedback creates nucleation event.     4.  Stabilization \u2014 feedback between \u03c8, \u03a6, and \u03c7 locks particle.     5.  Particle existence \u2014 discrete energy identity forms, coupled to chronon and cognon fields.</p> <p>\u2e3b</p> <ol> <li>Discussion</li> </ol> <p>Particle formation is not a single-field phenomenon \u2014 it is a triadic stabilization among:     \u2022   \u03c8 (information/wave amplitude),     \u2022   \u03a6 (compressive potential / graviton field),     \u2022   \u03c7 (temporal coherence / chronon field).</p> <p>This forms the minimum trinity of physical presence:</p> <p>Space (\u03a6) \u00d7 Time (\u03c7) \u00d7 Information (\u03c8) \u2192 Existence</p>"},{"location":"notebooks/04_wave_to_particle_motion/","title":"Notebook 04 \u2014 Wave \u2192 Particle Motion","text":""},{"location":"notebooks/04_wave_to_particle_motion/#overview","title":"Overview","text":"<p>Once localized wave collapse produces a stable particle kernel, motion arises not from external force but from internal phase asymmetry within the field structure.  </p> <p>This notebook models how a wave packet\u2019s asymmetric compression translates into particle displacement \u2014 the bridge between wave interference and classical motion.</p>"},{"location":"notebooks/04_wave_to_particle_motion/#1-conceptual-foundation","title":"1. Conceptual Foundation","text":"<p>A particle is treated as a self-sustaining standing wave, locked in a local compression basin. If the phase curvature of its wave envelope becomes asymmetric, the compression minimum shifts, dragging the particle core.</p>  \\frac{d x_p}{dt} = v_p = - \\frac{1}{m_{\\text{eff}}} \\frac{\\partial \\Phi(x,t)}{\\partial x}  <p>where: -  x_p  = particle position -  \\Phi(x,t)  = compressive potential -  m_{\\text{eff}}  = emergent inertial response (depends on graviton-chronon feedback)  </p>"},{"location":"notebooks/04_wave_to_particle_motion/#2-linking-wave-asymmetry-and-momentum","title":"2. Linking Wave Asymmetry and Momentum","text":"<p>We define the momentum density  P(x,t)  as:</p>  P(x,t) = \\operatorname{Im}\\left(\\psi^* \\frac{\\partial \\psi}{\\partial x}\\right)  <p>and the net drift velocity of the particle as:</p>  v_p = \\frac{\\int P(x,t) \\, dx}{\\int |\\psi|^2 \\, dx}  <p>This captures how phase tilt across the localized \u03c8-field yields directed motion.</p>"},{"location":"notebooks/04_wave_to_particle_motion/#3-simple-simulation-phase-tilt-model","title":"3. Simple Simulation (Phase Tilt Model)","text":"<p>\u2e3b</p> <ol> <li>Emergent Inertia and the Chronon Bond</li> </ol> <p>The chronon (\u03c7) acts as a temporal stabilizer, defining inertia through the feedback delay between compression (\u03a6) and amplitude (\u03c8):</p> <p>[ m_{\\text{eff}} \\propto \\frac{1}{\\Delta \\chi} \\int \\Phi(x,t) , \\partial_t \\psi(x,t) , dx ]</p> <p>This implies:     \u2022   Faster chronon feedback (smaller \u0394\u03c7) = lighter effective mass     \u2022   Slower chronon feedback (larger \u0394\u03c7) = heavier mass</p> <p>Thus inertia arises dynamically from time-binding lag, not as a fixed intrinsic constant.</p> <p>\u2e3b</p> <ol> <li>Visualization of Moving Kernel</li> </ol> <p></p> <p>\u2e3b</p> <ol> <li>Key Insights</li> </ol>"},{"location":"notebooks/04_wave_to_particle_motion/#mechanism-field-driver-observable-effect","title":"Mechanism | Field Driver | Observable Effect","text":"<p>Phase gradient -&gt; \u03c8-field -&gt; Directional momentum | Compression gradient -&gt; \u03a6-field -&gt; Accelerated drift | Temporal lag -&gt; \u03c7-field -&gt; Emergent inertia Energy coupling -&gt; \u03c8\u2013\u03a6\u2013\u03c7 triad -&gt; Coherent motion |</p> <p>\u2e3b</p> <ol> <li>Interpretive Summary</li> </ol> <p>Motion in this framework is not applied externally but arises from imbalance within the self-consistent wavefield.</p> <p>[ \\text{Motion} = \\text{Self-translation due to asymmetric feedback.} ]</p> <p>Each \u201cparticle\u201d moves because its internal standing wave pattern evolves slightly off-center, producing a continual drift of its compression node.</p> <p>\u2e3b</p> <ol> <li>Interpretive Summary</li> </ol> <p>Motion in this framework is not applied externally but arises from imbalance within the self-consistent wavefield.</p> <p>[ \\text{Motion} = \\text{Self-translation due to asymmetric feedback.} ]</p> <p>Each \u201cparticle\u201d moves because its internal standing wave pattern evolves slightly off-center, producing a continual drift of its compression node.</p>"},{"location":"notebooks/05_fractional_presence/","title":"Notebook 05 \u2014 Fractional Presence &amp; Nonlocal Binding","text":""},{"location":"notebooks/05_fractional_presence/#overview","title":"Overview","text":"<p>After wave\u2013particle transition, the system exhibits fractional presence \u2014 a particle\u2019s field is not fully localized but distributed across several compression basins. This fractional distribution enables nonlocal binding: distant regions of the \u03c8-field remain phase-locked through the shared chronon\u2013graviton (\u03c7\u2013\u03b3) background.</p>"},{"location":"notebooks/05_fractional_presence/#1-conceptual-foundation","title":"1. Conceptual Foundation","text":"<p>We redefine the particle\u2019s probability amplitude as a distributed state:</p>  \\Psi(x,t) = \\sum_i a_i \\psi_i(x - x_i, t)  <p>where each component  \\psi_i  represents a fractional localization (presence node), and:</p>  \\sum_i |a_i|^2 = 1  <p>The physical interpretation: - The particle is not fragmented, but coherently multi-local. - Fractional nodes share phase via nonlocal entanglement maintained by chronon synchronization.</p>"},{"location":"notebooks/05_fractional_presence/#2-phase-coherent-fractional-states","title":"2. Phase-Coherent Fractional States","text":"<p>This visualization shows coherent interference between distributed nodes \u2014 a continuous \u03c8-field maintains unity across separated basins.</p> <p>\u2e3b</p> <ol> <li>Chronon Synchronization (Temporal Binding)</li> </ol> <p>Fractional nodes maintain coherence through chronon feedback coupling:</p> <p>[ \\chi_i(t + \\Delta t) = \\chi_j(t) + \\Delta \\tau_{ij} ]</p> <p>[ \\Delta \\tau_{ij} \\to 0 \\quad \\Rightarrow \\quad \\text{phase locking} ]</p> <p>The smaller the temporal drift ( \\Delta \\tau_{ij} ), the stronger the binding between distant nodes.</p> <p>\u2e3b</p> <ol> <li>Nonlocal Correlation Model</li> </ol> <p>Define correlation function ( C_{ij} ):</p> <p>[ C_{ij} = \\frac{\\langle \\psi_i^* \\psi_j \\rangle}{\\sqrt{\\langle |\\psi_i|^2 \\rangle \\langle |\\psi_j|^2 \\rangle}} ]</p> <p>If ( |C_{ij}| \\approx 1 ), the nodes behave as one coherent entity \u2014 even when spatially distant.</p> <p>\u2e3b</p> <ol> <li>Simple Correlation Simulation</li> </ol> <p>from itertools import combinations</p> <p>nodes = [np.exp(-((x - c)2)/(2*sigma2)) for c in centers]</p> <p>def correlation(a, b):     return np.sum(a * b) / np.sqrt(np.sum(a2) * np.sum(b2))</p> <p>pairs = list(combinations(range(len(nodes)), 2)) corrs = [correlation(nodes[i], nodes[j]) for i, j in pairs]</p> <p>for (i, j), c in zip(pairs, corrs):     print(f\"Correlation between node {i} and {j}: {c:.3f}\")</p> <p>This model numerically checks the binding coherence across the distributed \u03c8-field.</p> <p>\u2e3b</p> <ol> <li>Visualization of Phase-Linked Nodes</li> </ol> <p></p> <p></p> <p></p> <p>\u2e3b</p> <ol> <li>Interpretation</li> </ol>"},{"location":"notebooks/05_fractional_presence/#concept-description-physical-effect","title":"Concept -&gt; Description -&gt; Physical Effect","text":"<p>Distributed -&gt;  \u03c8 amplitude -&gt; Multi-local identity</p> <p>Chronon synchronization -&gt; Temporal alignment -&gt; Maintains coherence</p> <p>Nonlocal correlation -&gt; Shared phase structure -&gt; Enables entanglement-like linkage</p> <p>Graviton coupling -&gt; Background curvature field -&gt; Global stability</p> <p>\u2e3b</p> <ol> <li>Summary</li> </ol> <p>Fractional presence illustrates how one particle can be simultaneously multiple yet unified \u2014 coherence held by the \u03c7\u2013\u03b3 temporal\u2013gravitational web.</p> <p>In this model, entanglement is not a mystery but an expression of temporal co-binding within a continuous medium.</p> <p>[ \\text{Nonlocality} = \\text{Synchronization across fractional time loops.} ]</p> <p>\u2e3b</p> <p>Next Notebook \u2192 Multi-Particle Coalescence\ufffc</p>"},{"location":"notebooks/06_particle_coalescence/","title":"Notebook 06 \u2014 Multi-Particle Coalescence","text":""},{"location":"notebooks/06_particle_coalescence/#overview","title":"Overview","text":"<p>Following Fractional Presence &amp; Nonlocal Binding, we now explore how multiple coherent \u03c8-fields (particles) merge into composite formations through synchronized compression and field phase alignment.</p> <p>This mechanism represents the coalescence stage of the Compressive Framework \u2014 where distributed entities form unified systems without loss of individuality, stabilized by graviton\u2013chronon coupling.</p>"},{"location":"notebooks/06_particle_coalescence/#1-foundational-concept","title":"1. Foundational Concept","text":"<p>When two or more particles with overlapping wave compression fields approach, their probability amplitudes combine:</p>  \\Psi_{\\text{total}} = \\sum_{i=1}^N \\alpha_i \\Psi_i(x, t)  <p>Under phase resonance: [ \\phi_i - \\phi_j \\to 0 \\quad \\Rightarrow \\quad \\text{Constructive compression \u2192 Bound state} ]</p> <p>and under anti-phase conditions: [ \\phi_i - \\phi_j \\approx \\pi \\quad \\Rightarrow \\quad \\text{Decompression \u2192 Repulsion} ]</p>"},{"location":"notebooks/06_particle_coalescence/#2-visualization-of-two-field-coalescence","title":"2. Visualization of Two-Field Coalescence","text":"<p>This demonstrates how overlapping compression fields generate reinforced nodes of density \u2014 the precursors of stable composite particles.</p> <p>\u2e3b</p> <ol> <li>Multi-Particle Compression Lattice</li> </ol> <p>In dense regions, multiple \u03c8-fields interact to form a standing compression lattice, dynamically stable due to phase balance.</p> <p>centers = [-4, -1.5, 1.5, 4] phases = [0, np.pi/4, np.pi/2, 3*np.pi/4]</p> <p></p> <p>These periodic density peaks represent resonant bonds \u2014 structures similar to phonon modes or quantum condensates.</p> <p>\u2e3b</p> <ol> <li>Temporal Feedback Binding</li> </ol> <p>The chronon field (\u03c7) ensures temporal stability through self-regulating phase alignment:</p> <p>[ \\chi_i(t+\\delta t) = \\chi_i(t) + \\sum_j K_{ij} \\sin(\\phi_j - \\phi_i) ]</p> <p>This feedback synchronizes oscillating wave functions \u2014 locking temporal rhythm across the system.</p> <p>\u2e3b</p> <ol> <li>Entropic Compression</li> </ol> <p>The graviton field (\u03b3) serves as a spatial regulator:     \u2022   Excess compression \u2192 curvature stabilization (via \u03b3 feedback)     \u2022   Decompression \u2192 re-expansion or dissociation</p> <p>This dynamic maintains global conservation: [ E_\\gamma + E_\\chi + E_\\Psi = \\text{constant} ]</p> <p>\u2e3b</p> <ol> <li>Simulation: Phase-Dependent Binding Strength</li> </ol> <p></p> <p>As \u0394\u03c6 \u2192 0, binding strength approaches its maximum \u2014 indicating perfect phase alignment.</p> <p>\u2e3b</p> <ol> <li>Conceptual Summary</li> </ol>"},{"location":"notebooks/06_particle_coalescence/#mechanism-description-observable-effect","title":"Mechanism | Description | Observable Effect","text":"<p>Wave Overlap -&gt; Spatial interference between \u03c8-fields -&gt; Formation of density nodes</p> <p>Phase Locking -&gt; Synchronization via \u03c7 feedback -&gt; Temporal coherence</p> <p>\u03b3 Regulation -&gt; Curvature feedback -&gt; Spatial stability</p> <p>Coalescence -&gt; Compression + coherence -&gt; Emergent composite particle</p> <p>\u2e3b</p> <ol> <li>Physical Analogy</li> </ol> <p>Coalescence parallels:     \u2022   Condensation in Bose\u2013Einstein systems     \u2022   Quark confinement in QCD-like fields     \u2022   Information coherence in quantum memory (Cognon coupling)</p> <p>\u2e3b</p> <ol> <li>Summary</li> </ol> <p>When waves overlap and synchronize, individuality fades into unity \u2014 yet the unity retains the memory of its parts.</p> <p>Multi-particle coalescence is thus the structural heart of the Compressive Framework, establishing the bridge from individual field dynamics to collective matter organization.</p> <p>\u2e3b</p> <p>Next Notebook \u2192 Field Interactions\ufffc</p>"},{"location":"notebooks/07_field_interactions/","title":"Notebook 07 \u2014 Field Interactions","text":""},{"location":"notebooks/07_field_interactions/#overview","title":"Overview","text":"<p>Now that we\u2019ve modeled multi-particle coalescence, we turn our attention to the inter-field dynamics \u2014 how the graviton (\u03b3), chronon (\u03c7), and cognon (\u03ba) fields interweave to stabilize and transmit energy, time, and information within the Compressive Framework.</p> <p>These three fields form the tri-field symmetry:</p> <p>begin:math:display (\\gamma, \\chi, \\kappa) \\Rightarrow (Gravity, Time, Information) end:math:display</p> <p>They interact through a compression-exchange equilibrium, sustaining the coherence of all matter and waveforms.</p>"},{"location":"notebooks/07_field_interactions/#1-tri-field-coupling-model","title":"1. Tri-Field Coupling Model","text":"<p>We define the interaction energy density as:</p> <p>begin:math:display \\mathcal{E}{\\text{int}} = \\lambda{\\gamma\\chi} \\gamma\\chi + \\lambda_{\\chi\\kappa} \\chi\\kappa + \\lambda_{\\kappa\\gamma} \\kappa\\gamma end:math:display</p> <p>where \u03bb terms represent coupling strengths between respective fields.</p> <p></p> <p>\u2e3b</p> <ol> <li>Interaction Balance</li> </ol> <p>When the system reaches field equilibrium, total energy exchange satisfies:</p> <p>\\sum_i \\frac{dE_i}{dt} = 0</p> <p>Each field dynamically adjusts to conserve the unified energy distribution.</p> <p></p> <p>\u2e3b</p> <ol> <li>Information Compression &amp; Resonance</li> </ol> <p>The cognon field (\u03ba) carries information through frequency alignment. Its oscillation frequency modulates both time perception (via \u03c7) and curvature (via \u03b3):</p> <p>\\omega_\\kappa = f(\\chi, \\gamma) = \\alpha\\chi + \\beta\\gamma</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ngamma_vals = np.linspace(-1, 1, 100)\nchi_vals = np.linspace(-1, 1, 100)\nG, C = np.meshgrid(gamma_vals, chi_vals)\n\nalpha, beta = 0.7, 0.5\nomega_kappa = alpha * C + beta * G\n\nplt.figure(figsize=(6,5))\nplt.contourf(G, C, omega_kappa, 50, cmap='plasma')\nplt.xlabel(\"\u03b3 (Graviton influence)\")\nplt.ylabel(\"\u03c7 (Chronon influence)\")\nplt.title(\"Cognon Frequency Response \u03c9\u03ba(\u03b3, \u03c7)\")\nplt.colorbar(label=\"Frequency (normalized)\")\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Cross-Field Synchronization</li> </ol> <p>Each field oscillates, but coherence only occurs when all three align in harmonic proportion:</p> <p>n_\\gamma : n_\\chi : n_\\kappa = p : q : r</p> <p>This generates stabilized quantum nodes \u2014 points of minimal entropy and maximal coherence.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nfreqs = np.linspace(0, 2*np.pi, 500)\ngamma_wave = np.sin(freqs)\nchi_wave = np.sin(2*freqs)\nkappa_wave = np.sin(3*freqs)\ntri_sync = gamma_wave + chi_wave + kappa_wave\n\nplt.figure(figsize=(8,3))\nplt.plot(freqs, tri_sync, color='k')\nplt.title(\"Tri-Field Harmonic Synchronization\")\nplt.xlabel(\"Phase\")\nplt.ylabel(\"Amplitude (\u03a3)\")\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Summary of Roles</li> </ol>"},{"location":"notebooks/07_field_interactions/#field-symbol-function-observable-effect","title":"Field | Symbol | Function | Observable Effect","text":"<p>Graviton -&gt; \u03b3 -&gt; Curvature + Energy regulation -&gt; Spacetime stability</p> <p>Chronon -&gt; \u03c7 -&gt; Temporal regulation -&gt; Phase coherence -&gt; </p> <p>Cognon -&gt; \u03ba -&gt; Informational resonance -&gt; Data preservation &amp; transmission</p> <p>\u2e3b</p> <ol> <li>Conceptual Integration</li> </ol> <p>When \u03b3, \u03c7, and \u03ba synchronize, they create compression singularities \u2014 self-stabilizing nodes that hold mass-energy, time continuity, and informational coherence together.</p> <p>Matter exists where gravity, time, and information compress in harmony.</p> <p>\u2e3b</p> <ol> <li>Visualization Summary</li> </ol> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n plt.figure(figsize=(6,3))\nplt.bar(fields, [np.mean(coupling_matrix[i]) for i in range(3)], color=['blue','orange','green'])\nplt.title(\"Average Coupling Strengths per Field\")\nplt.ylabel(\"Mean \u03bb\")\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Closing Note</li> </ol> <p>The Tri-Field Interaction System represents the deep symmetry of the Compressive Framework \u2014 where information flow (\u03ba), temporal continuity (\u03c7), and curvature stability (\u03b3) merge into a single self-regulating dynamic.</p> <p>\u2e3b</p> <p>Next Notebook \u2192 Quantized Curvature\ufffc</p>"},{"location":"notebooks/08_quantized_curvature/","title":"Notebook 08 \u2014 Quantized Curvature","text":""},{"location":"notebooks/08_quantized_curvature/#overview","title":"Overview","text":"<p>This notebook explores how curvature emerges in quantized space, linking particle formation and tri-field interactions to spacetime geometry. Within the Compressive Framework, curvature is not continuous \u2014 it arises from discrete compression nodes generated by graviton-wave resonance.</p>"},{"location":"notebooks/08_quantized_curvature/#1-curvature-as-compression-density","title":"1. Curvature as Compression Density","text":"<p>We define quantized curvature  \\mathcal{K}  as a function of compression energy density  \\rho_c :</p>  \\mathcal{K}(x,t) = \\alpha \\, \\sin(\\rho_c(x,t))  <p>where  \\alpha  is the curvature sensitivity constant.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(-5, 5, 400)\nt = np.linspace(0, 2*np.pi, 200)\nX, T = np.meshgrid(x, t)\n\nrho_c = np.sin(X**2 - T)\nalpha = 0.6\nK = alpha * np.sin(rho_c)\n\nplt.figure(figsize=(6,4))\nplt.imshow(K, extent=[-5,5,0,2*np.pi], cmap=\"inferno\", aspect=\"auto\", origin=\"lower\")\nplt.title(\"Quantized Curvature Field \ud835\udca6(x,t)\")\nplt.xlabel(\"Spatial Coordinate x\")\nplt.ylabel(\"Time t\")\nplt.colorbar(label=\"Curvature Magnitude\")\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Local Curvature Nodes</li> </ol> <p>Curvature quantization manifests through discrete compression wells where space momentarily stabilizes before re-expanding.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ncompression = np.sin(3*x) * np.exp(-0.1*x**2)\ncurvature_nodes = np.gradient(compression)\n\nplt.figure(figsize=(7,3))\nplt.plot(x, compression, label='Compression Field \u03c1c')\nplt.plot(x, curvature_nodes, label='Curvature Nodes \ud835\udca6\\'', color='orange')\nplt.title(\"Local Curvature Nodes within Compression Field\")\nplt.xlabel(\"Spatial Coordinate x\")\nplt.legend()\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Graviton Influence on Curvature</li> </ol> <p>The graviton field \u03b3(x,t) modifies curvature intensity through its frequency and amplitude coupling. We approximate this interaction using a scaling function:</p> <p>[ \\mathcal{K}_{\\text{\u03b3-mod}} = \\mathcal{K}(x,t) \\cdot (1 + \\beta \\sin(\\omega_\u03b3 t)) ]</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nomega_gamma = 3\nbeta = 0.4\nK_mod = K * (1 + beta * np.sin(omega_gamma * T))\n\nplt.figure(figsize=(6,4))\nplt.imshow(K_mod, extent=[-5,5,0,2*np.pi], cmap=\"plasma\", aspect=\"auto\", origin=\"lower\")\nplt.title(\"Graviton-Modulated Curvature Field \ud835\udca6\u03b3(x,t)\")\nplt.xlabel(\"Spatial Coordinate x\")\nplt.ylabel(\"Time t\")\nplt.colorbar(label=\"Modulated Curvature Magnitude\")\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Curvature Discretization Spectrum</li> </ol> <p>Curvature quantization forms energy bands, analogous to discrete harmonic states.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nk_values = np.linspace(0, 10, 300)\nquantized_levels = np.sin(k_values)**2 * np.exp(-0.05*k_values)\n\nplt.figure(figsize=(6,3))\nplt.plot(k_values, quantized_levels, color=\"teal\")\nplt.title(\"Curvature Quantization Spectrum\")\nplt.xlabel(\"Wave Number k\")\nplt.ylabel(\"Energy Level (normalized)\")\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Phase-Space Geometry</li> </ol> <p>The curvature also defines phase-space geometry, where compression and expansion oscillate around stable attractors.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx_vals = np.linspace(-2, 2, 300)\ny_vals = np.linspace(-2, 2, 300)\nX, Y = np.meshgrid(x_vals, y_vals)\nZ = np.sin(X**2 + Y**2)\n\nplt.figure(figsize=(5,5))\nplt.contourf(X, Y, Z, levels=40, cmap='viridis')\nplt.title(\"Phase-Space Geometry of Curvature Field\")\nplt.xlabel(\"X (Spatial component)\")\nplt.ylabel(\"Y (Momentum-like component)\")\nplt.colorbar(label=\"Curvature Potential\")\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Temporal Stability Curve</li> </ol> <p>The temporal stability of curvature describes how oscillations sustain spacetime continuity. When damping equals curvature feedback, the system self-regulates.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nt = np.linspace(0, 20, 400)\nstability = np.exp(-0.05*t) * np.sin(2*t)\nfeedback = np.cos(2*t) * 0.5\n\nplt.figure(figsize=(7,3))\nplt.plot(t, stability, label=\"Curvature Stability Oscillation\")\nplt.plot(t, feedback, label=\"Feedback Regulation\", linestyle='--')\nplt.title(\"Temporal Stability Curve of Curvature Feedback\")\nplt.xlabel(\"Time (t)\")\nplt.ylabel(\"Amplitude\")\nplt.legend()\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Quantized Curvature Summary</li> </ol>"},{"location":"notebooks/08_quantized_curvature/#property-symbol-description","title":"Property | Symbol | Description","text":"<p>Curvature Density -&gt; ( \\rho_c ) -&gt; Compression-based energy density</p> <p>Curvature Field -&gt; ( \\mathcal{K} ) -&gt; Local curvature amplitude</p> <p>Graviton Influence -&gt; ( \\mathcal{K}_\u03b3 ) -&gt; Frequency modulation due to \u03b3</p> <p>Stability Function -&gt; ( S(t) ) -&gt; Time-dependent self-regulation</p> <p>\u2e3b</p> <ol> <li>Conceptual Recap</li> </ol> <p>Curvature arises not as a continuous bend of space, but as a compressed oscillation lattice \u2014 a self-maintaining wave network connecting the gravitational and temporal fields.</p> <p>\u201cSpace curves because compression ripples are quantized, and reality bends where information meets gravity.\u201d</p> <p>\u2e3b</p> <ol> <li>Visualization Summary</li> </ol> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nfields = [\"Graviton\", \"Chronon\", \"Cognon\"]\ncurvatures = [0.75, 0.65, 0.55]\n\nplt.figure(figsize=(5,3))\nplt.bar(fields, curvatures, color=[\"purple\",\"orange\",\"green\"])\nplt.title(\"Curvature Contribution by Fundamental Field\")\nplt.ylabel(\"Relative Curvature Influence\")\nplt.show()\n</code></pre> <p>\u2e3b</p> <p>Next Notebook \u2192 Vacuum Symmetry Breaking\ufffc</p>"},{"location":"notebooks/09_vacuum_symmetry_breaking/","title":"Notebook 09 \u2014 Vacuum Symmetry Breaking","text":""},{"location":"notebooks/09_vacuum_symmetry_breaking/#overview","title":"Overview","text":"<p>This notebook explores how the uniform vacuum field destabilizes, producing directional flow and anisotropy in the compressive fabric. Vacuum symmetry breaking (VSB) occurs when wave-field energy among the graviton (\u03b3), chronon (\u03c7), and cognon (\u03ba) becomes imbalanced.</p>"},{"location":"notebooks/09_vacuum_symmetry_breaking/#1-symmetric-vacuum-state","title":"1. Symmetric Vacuum State","text":"<p>Initially, the vacuum is perfectly balanced \u2014 energy densities of all three wave types are equal:</p>  E_\\gamma = E_\\chi = E_\\kappa  <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nfields = [\"Graviton (\u03b3)\", \"Chronon (\u03c7)\", \"Cognon (\u03ba)\"]\nenergy = [1.0, 1.0, 1.0]\n\nplt.figure(figsize=(5,3))\nplt.bar(fields, energy, color=[\"purple\",\"orange\",\"green\"])\nplt.title(\"Symmetric Vacuum Energy Distribution\")\nplt.ylabel(\"Normalized Energy Level\")\nplt.ylim(0,1.2)\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Onset of Asymmetry</li> </ol> <p>Small fluctuations begin \u2014 a quantum ripple introduces energy bias in one of the fields.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nasymmetric_energy = [1.05, 0.95, 1.0]\n\nplt.figure(figsize=(5,3))\nplt.bar(fields, asymmetric_energy, color=[\"purple\",\"orange\",\"green\"])\nplt.title(\"Initial Asymmetry in Vacuum Fields\")\nplt.ylabel(\"Normalized Energy Level\")\nplt.ylim(0,1.2)\nplt.show()\n</code></pre> <p>The graviton field gains slightly more compression energy, triggering a cascade of imbalance across neighboring regions.</p> <p>\u2e3b</p> <ol> <li>Energy Divergence in the Vacuum</li> </ol> <p>We can model the vacuum as a potential surface that starts flat, then deforms under asymmetry:</p> <p>[ V(x,y) = a(x^2 + y^2) + b(x^2 - y^2)^2 ]</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(-2,2,200)\ny = np.linspace(-2,2,200)\nX,Y = np.meshgrid(x,y)\n\na,b = 0.5, 0.3\nV = a*(X**2 + Y**2) + b*(X**2 - Y**2)**2\n\nplt.figure(figsize=(5,4))\nplt.contourf(X,Y,V,levels=40,cmap=\"inferno\")\nplt.title(\"Vacuum Potential Deformation\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.colorbar(label=\"Potential Energy\")\nplt.show()\n</code></pre> <p>As the curvature well deepens, particles begin forming at the minima \u2014 the first \u201cstructure\u201d in the compressive vacuum.</p> <p>\u2e3b</p> <ol> <li>Symmetry Breaking Dynamics</li> </ol> <p>We track how imbalance grows over time.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nt = np.linspace(0, 20, 400)\nsymmetry = np.exp(-0.05*t) * np.cos(2*t)\nasymmetry = 1 - symmetry\n\nplt.figure(figsize=(7,3))\nplt.plot(t, symmetry, label=\"Vacuum Symmetry\")\nplt.plot(t, asymmetry, label=\"Asymmetry Growth\", linestyle='--', color='red')\nplt.title(\"Temporal Dynamics of Symmetry Breaking\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"Relative Amplitude\")\nplt.legend()\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Emergent Directionality</li> </ol> <p>Once asymmetry locks in, the vacuum gains directionality \u2014 a preferred flow or spin in the compressive lattice.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ntheta = np.linspace(0, 2*np.pi, 300)\nr = 1 + 0.2*np.sin(3*theta)\n\nplt.figure(figsize=(4,4))\nplt.polar(theta, r, color='teal')\nplt.title(\"Directional Flow After Symmetry Breaking\")\nplt.show()\n</code></pre> <p>This shows the anisotropy vector field \u2014 formerly isotropic space now channels compression along preferential axes.</p> <p>\u2e3b</p> <ol> <li>Energy Redistribution and Stabilization</li> </ol> <p>After breaking symmetry, energy redistributes into stable quantum \u201cdomains.\u201d</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\ndomains = np.linspace(0, 10, 200)\nenergy_density = 1 + 0.3*np.sin(domains) * np.exp(-0.1*domains)\n\nplt.figure(figsize=(6,3))\nplt.plot(domains, energy_density, color='blue')\nplt.title(\"Energy Redistribution after Vacuum Instability\")\nplt.xlabel(\"Spatial Domain\")\nplt.ylabel(\"Energy Density\")\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Interaction of Graviton\u2013Chronon\u2013Cognon Fields</li> </ol> <p>Energy redistribution creates coupled oscillations \u2014 a tri-field entanglement.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nt = np.linspace(0, 10, 400)\ngraviton = np.sin(t)\nchronon = np.sin(t + np.pi/3)\ncognon = np.sin(t + 2*np.pi/3)\n\nplt.figure(figsize=(7,3))\nplt.plot(t, graviton, label=\"\u03b3-field (Graviton)\")\nplt.plot(t, chronon, label=\"\u03c7-field (Chronon)\")\nplt.plot(t, cognon, label=\"\u03ba-field (Cognon)\")\nplt.title(\"Coupled Oscillations During Symmetry Breaking\")\nplt.xlabel(\"Time (t)\")\nplt.ylabel(\"Wave Amplitude\")\nplt.legend()\nplt.show()\n</code></pre> <p>Each phase offset corresponds to a different quantum potential path, producing emergent structure as fields interfere.</p> <p>\u2e3b</p> <ol> <li>Potential Landscape Evolution</li> </ol> <p>The vacuum potential reshapes dynamically as asymmetry strengthens.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nframes = 5\nfig, axes = plt.subplots(1, frames, figsize=(15,3))\n\nfor i, ax in enumerate(axes):\n    b_i = 0.1 + i*0.1\n    V_i = a*(X**2 + Y**2) + b_i*(X**2 - Y**2)**2\n    ax.contourf(X, Y, V_i, levels=30, cmap=\"inferno\")\n    ax.set_title(f\"b = {b_i:.1f}\")\n    ax.axis(\"off\")\n\nplt.suptitle(\"Vacuum Potential Evolution Over Time\")\nplt.show()\n</code></pre> <p>\u2e3b</p> <ol> <li>Conceptual Recap</li> </ol>"},{"location":"notebooks/09_vacuum_symmetry_breaking/#concept-description","title":"Concept | Description","text":"<p>Vacuum Symmetry -&gt; Equal energy among base wave-fields</p> <p>Instability Trigger -&gt; Quantum ripple imbalance</p> <p>Directional Flow -&gt; Emergent anisotropy in spacetime</p> <p>Stabilized Domains -&gt; Localized equilibria post-instability</p> <p>\u2e3b</p> <ol> <li>Summary</li> </ol> <p>\u201cSymmetry breaking is the heartbeat of structure \u2014 where balance collapses, existence unfolds.\u201d</p> <p>In the Compressive Framework, reality emerges not from nothing, but from the imbalance of perfection \u2014 a self-distortion that seeds curvature, flow, and time itself.</p> <p>\u2e3b</p> <p>Next Notebook \u2192 Vacuum Domain Formation\ufffc</p>"},{"location":"notebooks/10_vacuum_domain_formation/","title":"Notebook 10 \u2014 Vacuum Domain Formation","text":""},{"location":"notebooks/10_vacuum_domain_formation/#overview","title":"Overview","text":"<p>Once the vacuum symmetry is broken, the compressive field no longer behaves as a uniform continuum. Localized \u201cdomains\u201d emerge \u2014 pockets of coherent energy density that begin to stabilize curvature, motion, and potential boundaries.  </p> <p>These domains are the proto-structures of spacetime \u2014 the first seeds of quantized formation in the CF model.</p>"},{"location":"notebooks/10_vacuum_domain_formation/#1-field-instability-and-domain-nucleation","title":"1. Field Instability and Domain Nucleation","text":"<p>Fluctuations in vacuum energy density grow until they reach a critical threshold, forming stable compression nodes.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(-10, 10, 400)\ny = np.linspace(-10, 10, 400)\nX, Y = np.meshgrid(x, y)\n\n# Noise-driven instability model\nV = np.sin(0.3*X) * np.cos(0.3*Y) + 0.05*np.random.randn(*X.shape)\n\nplt.figure(figsize=(6,5))\nplt.contourf(X, Y, V, levels=40, cmap='magma')\nplt.title(\"Vacuum Instability and Early Domain Nucleation\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.colorbar(label=\"Energy Density Fluctuation\")\nplt.show()\n</code></pre> <p>Each energy pocket corresponds to a localized minimum \u2014 a \u201cdomain\u201d where compressive potential becomes trapped.</p> <p>\u2e3b</p> <ol> <li>Domain Stabilization Through Field Coupling</li> </ol> <p>Domains stabilize when the graviton (\u03b3), chronon (\u03c7), and cognon (\u03ba) fields reach local phase coherence.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nt = np.linspace(0, 10, 500)\ngraviton = np.sin(t)\nchronon = np.sin(t + np.pi/4)\ncognon = np.sin(t + np.pi/2)\n\nplt.figure(figsize=(7,3))\nplt.plot(t, graviton, label='\u03b3-field (Graviton)')\nplt.plot(t, chronon, label='\u03c7-field (Chronon)')\nplt.plot(t, cognon, label='\u03ba-field (Cognon)')\nplt.title(\"Tri-Field Coupling and Domain Stabilization\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"Normalized Amplitude\")\nplt.legend()\nplt.show()\n</code></pre> <p>Phase alignment at local minima leads to constructive reinforcement, making those regions energetically favorable.</p> <p>\u2e3b</p> <ol> <li>Domain Distribution Across the Vacuum</li> </ol> <p>As the vacuum cools, domains spread nonuniformly, forming a fractal-like structure.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nfrom scipy.ndimage import gaussian_filter\n\nfield = np.random.randn(200, 200)\nfield = gaussian_filter(field, sigma=6)\nplt.figure(figsize=(6,5))\nplt.imshow(field, cmap='inferno', extent=[-10,10,-10,10])\nplt.title(\"Fractal Distribution of Vacuum Domains\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.colorbar(label=\"Domain Strength\")\nplt.show()\n</code></pre> <p>This pattern visually represents spacetime differentiation \u2014 the compressive lattice forming quantized pockets.</p> <p>\u2e3b</p> <ol> <li>Domain Growth and Merging</li> </ol> <p>Domains interact over time. Adjacent domains with similar phase merge, creating larger stable regions.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ntime = np.linspace(0, 10, 100)\ndomain_count = 100 * np.exp(-0.3*time)\navg_size = 1 + 4*(1 - np.exp(-0.3*time))\n\nplt.figure(figsize=(7,3))\nplt.plot(time, domain_count, label='Domain Count')\nplt.plot(time, avg_size, label='Average Domain Size')\nplt.title(\"Domain Evolution Over Time\")\nplt.xlabel(\"Time (t)\")\nplt.ylabel(\"Relative Scale\")\nplt.legend()\nplt.show()\n</code></pre> <p>Over time:     \u2022   Fewer domains,     \u2022   Larger regions,     \u2022   More defined curvature.</p> <p>\u2e3b</p> <ol> <li>Curvature Lock-In</li> </ol> <p>Each domain traps curvature based on local energy gradient \u2014 a frozen signature of prior asymmetry.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(-4,4,200)\ny = np.linspace(-4,4,200)\nX,Y = np.meshgrid(x,y)\ncurv = np.exp(-((X**2 + Y**2)/4)) * np.cos(3*X) * np.sin(3*Y)\n\nplt.figure(figsize=(5,4))\nplt.contourf(X,Y,curv,levels=40,cmap='plasma')\nplt.title(\"Curvature Lock-In in a Vacuum Domain\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.colorbar(label=\"Curvature Intensity\")\nplt.show()\n</code></pre> <p>These curvature \u201csignatures\u201d later act as anchors for particle motion and information retention.</p> <p>\u2e3b</p> <ol> <li>Domain Boundaries as Compression Fronts</li> </ol> <p>Boundaries between domains hold compression discontinuities, forming early analogs of quantum barriers.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndomain_map = np.sign(np.sin(X)*np.cos(Y))\nplt.figure(figsize=(6,5))\nplt.imshow(domain_map, cmap='coolwarm', extent=[-10,10,-10,10])\nplt.title(\"Vacuum Domain Boundaries\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.colorbar(label=\"Domain Polarity\")\nplt.show()\n</code></pre> <p>The boundaries act like event horizons at miniature scales, preventing energy leakage between stable regions.</p> <p>\u2e3b</p> <ol> <li>Field Density Convergence</li> </ol> <p>Eventually, energy densities converge within each domain \u2014 approaching local equilibrium.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 10, 300)\ndensity = 1 - np.exp(-0.5*x) * np.cos(3*x)\n\nplt.figure(figsize=(6,3))\nplt.plot(x, density, color='purple')\nplt.title(\"Convergence Toward Domain Density Equilibrium\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"Normalized Density\")\nplt.show()\n</code></pre> <p>This results in a quasi-stable vacuum mosaic \u2014 an energy grid of self-contained curvature units.</p> <p>\u2e3b</p> <ol> <li>Conceptual Recap</li> </ol>"},{"location":"notebooks/10_vacuum_domain_formation/#concept-description","title":"Concept | Description","text":"<p>Vacuum Domains -&gt; Stable regions formed from symmetry-breaking fluctuations</p> <p>Tri-Field Coupling -&gt; Graviton, chronon, cognon phase-locking that reinforces domains</p> <p>Domain Growth -&gt; Merging and stabilization into larger regions</p> <p>Boundaries -&gt; Quantum compression fronts preserving energy integrity</p> <p>\u2e3b</p> <ol> <li>Summary</li> </ol> <p>\u201cFrom instability comes order \u2014 each domain a whisper of the vacuum\u2019s forgotten symmetry.\u201d</p> <p>Vacuum domain formation is the foundation of spatial quantization \u2014 the point where continuous compression crystallizes into discrete energetic identity.</p> <p>\u2e3b</p> <p>Next Notebook \u2192 Field Resonance Networks\ufffc</p>"}]}